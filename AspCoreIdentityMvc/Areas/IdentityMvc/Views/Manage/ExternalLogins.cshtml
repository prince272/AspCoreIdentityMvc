@model ExternalLoginsModel
@{
    ViewData["Title"] = "Manage your external logins";
    ViewData["ActivePage"] = ManageNavPages.ExternalLogins;

    var CurrentLogins = (IList<UserLoginInfo>)ViewData["CurrentLogins"];
    var OtherLogins = (IList<AuthenticationScheme>)ViewData["OtherLogins"];
    var ShowRemoveButton = (bool)ViewData["ShowRemoveButton"];
}

<partial name="_StatusMessage" for="StatusMessage" />
@if (CurrentLogins?.Count > 0)
{
<h4>Registered Logins</h4>
<table class="table">
    <tbody>
        @foreach (var login in CurrentLogins)
            {
        <tr>
            <td>@login.ProviderDisplayName</td>
            <td>
                @if (ShowRemoveButton)
                        {
                <form asp-action="ExternalLoginsRemoveLogin" id="remove-login" method="post">
                    <div>
                        <input asp-for="@login.LoginProvider" name="LoginProvider" type="hidden" />
                        <input asp-for="@login.ProviderKey" name="ProviderKey" type="hidden" />
                        <button type="submit" class="btn btn-primary" title="Remove this @login.ProviderDisplayName login from your account">Remove</button>
                    </div>
                </form>
                        }
                        else
                        {
                @: &nbsp;
                        }
            </td>
        </tr>
            }
    </tbody>
</table>
}
@if (OtherLogins?.Count > 0)
{
<h4>Add another service to log in.</h4>
<hr />
<form asp-action="ExternalLoginsLinkLogin" id="link-login-form" method="post" class="form-horizontal">
    <div id="socialLoginList">
        <p>
            @foreach (var provider in OtherLogins)
                {
            <button id="link-login-button" type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                }
        </p>
    </div>
</form>
}